#!/bin/bash
set -e

ABBREV='min-stage1'

# Set the name of the regular user
REGULAR_USER='vagrant' # To be changed later if necessary

T_BEGIN=$(date +'%s')

echo '--------------------'
echo 'ls -l /usr/local/bin'
ls -l /usr/local/bin

# Prepare apt-get
/usr/local/bin/aptget

# Set environment variables to cut down on annoying warning messages
export DEBIAN_FRONTEND='noninteractive'
export DEBCONF_NOWARNINGS='true'
export HOME=/root
export LC_ALL=C

echo '##########################'
echo "BEGIN $ABBREV-root actions"
echo '##########################'

# Execute only in Docker
# Skip in Vagrant
if [ ! -d /home/vagrant ]; then
  # Adding user
  REGULAR_USER='winner'
  echo '----------------------------------------------------'
  echo "adduser --disabled-password --gecos '' $REGULAR_USER"
  adduser --disabled-password --gecos '' $REGULAR_USER

  # Add locales
  echo '--------------------------'
  echo 'apt-get install -y locales'
  apt-get install -y locales

  # Add Sudo
  echo '-----------------------'
  echo 'apt-get install -y sudo'
  apt-get install -y sudo

  # Giving user access to sudo
  echo '--------------------------'
  echo "adduser $REGULAR_USER sudo"
  adduser $REGULAR_USER sudo

  # Giving root access to sudo
  echo '-----------------'
  echo "adduser root sudo"
  adduser root sudo

  echo '-----------------------------'
  echo 'Setting /etc/sudoers settings'
  # No password required to use sudo
  echo '%sudo ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers
  echo 'Updating /etc/sudoers to ensure that apt-get works'
  echo 'Defaults env_reset' >> /etc/sudoers
  echo 'Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"' >> /etc/sudoers
fi

# Add Nano
echo '-----------------------'
echo 'apt-get install -y nano'
apt-get install -y nano

echo '#############################'
echo "FINISHED $ABBREV-root actions"
echo '#############################'

su -c /usr/local/bin/$ABBREV-user $REGULAR_USER
/usr/local/bin/finalize-root
su -c /usr/local/bin/finalize-user $REGULAR_USER
su -c /usr/local/bin/check $REGULAR_USER

T_FINISH=$(date +'%s')
T_ELAPSED=$(($T_FINISH-$T_BEGIN))
echo '--------------------------------'
echo 'Time to modify the Docker image:'
echo "$(($T_ELAPSED / 60)) minutes and $(($T_ELAPSED % 60)) seconds"
